version: "3.9"

services:
  web-app:
    build:
      # zabildit obraz iz dockerfile
      context: .
    ports:
      # perebrozka portov
      - "8000:8000"
    volumes:
      # localnaya directoriya i doker composa svyazani
      # esli izmenitsa lokalniy fayl i dockera toje izmenitsa
      - ./service:/service
      - static_volume:/service/static
      - media_volume:/service/media
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=postgres
      - DB_PASS=123456
    command: >
      sh -c "python manage.py collectstatic --noinput && python manage.py migrate  && gunicorn -b 0.0.0.0:8000 service.wsgi:application"
    expose:
      - "8000"


    depends_on:
      - database



  database:
    image: postgres:14.6-alpine
    environment:
      - POSTGRES_DB=dbname
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    ports:
      - 5434:5432
    volumes:
      - ~/.pg/pg_data/service:/var/lib/postgresql/data

  redis:
    image: redis:7.0.5-alpine
    hostname: redis
    ports:
      - 16379:6379

  worker:
    build:
      context: .
    # po kakomu hostu budet opred-sa celery-service
    hostname: worker
    # bazovaya commanda s kotoroy budem vizivat dr komandi
    entrypoint: celery
    # dr komanda
    command: -A celery_app.app worker --loglevel=info
    volumes:
      # localnaya directoriya i doker composa svyazani
      # esli izmenitsa lokalniy fayl i dockera toje izmenitsa
      - ./service:/service
    links:
      - redis
    depends_on:
      - redis
      - database
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=postgres
      - DB_PASS=123456

  worker2:
    build:
      context: .
    # po kakomu hostu budet opred-sa celery-service
    hostname: worker2
    # bazovaya commanda s kotoroy budem vizivat dr komandi
    entrypoint: celery
    # dr komanda
    command: -A celery_app.app worker --loglevel=info
    volumes:
      # localnaya directoriya i doker composa svyazani
      # esli izmenitsa lokalniy fayl i dockera toje izmenitsa
      - ./service:/service
    links:
      - redis
    depends_on:
      - redis
      - database
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=postgres
      - DB_PASS=123456

  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A celery_app.app flower
    volumes:
      - ./service:/service
    links:
      - redis
    depends_on:
      - redis
    ports:
      - "5555:5555"

  nginx:
    build:
      dockerfile: ./Dockerfile
      context: ./docker/nginx/
    container_name: yt_nginx
    image: yt_nginx
    volumes:
      - static_volume:/service/static
      - media_volume:/service/media
    depends_on:
      - web-app
    ports:
      - "80:80"

volumes:
  static_volume:
  media_volume:

